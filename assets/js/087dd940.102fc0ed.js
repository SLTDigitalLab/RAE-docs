"use strict";(self.webpackChunkrae_docs=self.webpackChunkrae_docs||[]).push([[5935],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>g});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),d=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=d(t.components);return a.createElement(p.Provider,{value:e},t.children)},c="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),c=d(n),u=r,g=c["".concat(p,".").concat(u)]||c[u]||m[u]||l;return n?a.createElement(g,i(i({ref:e},s),{},{components:n})):a.createElement(g,i({ref:e},s))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[c]="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5038:(t,e,n)=>{n.r(e),n.d(e,{Tooltip:()=>s,assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:1},i="Train",o={unversionedId:"api-engine/Explorer/ML/Cached/get",id:"api-engine/Explorer/ML/Cached/get",title:"Train",description:"This is the process of teaching a machine learning model to make accurate predictions by adjusting its parameters using labeled data. It involves optimizing a specific objective function and aims to create a model that generalizes well to new data.",source:"@site/docs/api-engine/Explorer/ML/Cached/get.mdx",sourceDirName:"api-engine/Explorer/ML/Cached",slug:"/api-engine/Explorer/ML/Cached/get",permalink:"/docs/api-engine/Explorer/ML/Cached/get",draft:!1,editUrl:"https://github.com/SLTDigitalLab/RAE-docs/tree/main/docs/api-engine/Explorer/ML/Cached/get.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Explorer",permalink:"/docs/api-engine/Explorer/ML/Cached/get-all"},next:{title:"Make Permanent",permalink:"/docs/api-engine/Explorer/ML/Cached/make_permanent"}},p={},d=[{value:"Reponse Body",id:"reponse-body",level:2},{value:"Types",id:"types",level:3},{value:"Sample",id:"sample",level:3}],s=t=>{let{children:e,color:n}=t;return(0,r.kt)("span",{style:{backgroundColor:n,borderRadius:"20px",color:"#fff",padding:"7px",cursor:"pointer",fontWeight:"750",fontSize:"15px",position:"relative",bottom:"4px"},onClick:()=>{alert(`You clicked the color ${n} with label ${e}`)}},e)},c={toc:d,Tooltip:s};function m(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"train"},"Train"),(0,r.kt)("p",null,"This is the process of teaching a machine learning model to make accurate predictions by adjusting its parameters using labeled data. It involves optimizing a specific objective function and aims to create a model that generalizes well to new data."),(0,r.kt)(s,{color:"#3abe25",mdxType:"Tooltip"},"Method: GET")," ",(0,r.kt)(s,{color:"#Be2525",mdxType:"Tooltip"},"Authorization: No"),(0,r.kt)("div",{style:{marginBottom:"20px"}}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"https://engine.raccoon-ai.io/api/v1/explore/ml/cached/get/<project_id>\n")),(0,r.kt)("h2",{id:"reponse-body"},"Reponse Body"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Project identification number")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"user_id"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"User identification number")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"model_path"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Saved path for the model")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"features"),(0,r.kt)("td",{parentName:"tr",align:null},"list"),(0,r.kt)("td",{parentName:"tr",align:null},"Set of features")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"targets"),(0,r.kt)("td",{parentName:"tr",align:null},"list"),(0,r.kt)("td",{parentName:"tr",align:null},"Set of targets")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"algo_type"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Algorithem type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"types_map"),(0,r.kt)("td",{parentName:"tr",align:null},"json"),(0,r.kt)("td",{parentName:"tr",align:null},"Types of the features selected")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"project_id"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Unique project identiication number")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"train_accu"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"Accuracy of the trained model (between 0-1)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dataset"),(0,r.kt)("td",{parentName:"tr",align:null},"json"),(0,r.kt)("td",{parentName:"tr",align:null},"The prediction dataset")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"permanent_save"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Indiacating whether permently saved or not")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"created_ts"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"Created time of the project")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"updated_ts"),(0,r.kt)("td",{parentName:"tr",align:null},"json"),(0,r.kt)("td",{parentName:"tr",align:null},"If updated, updated time of the project")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"hyper_params"),(0,r.kt)("td",{parentName:"tr",align:null},"json"),(0,r.kt)("td",{parentName:"tr",align:null},"The hyper parameters used for the model")))),(0,r.kt)("h3",{id:"types"},"Types"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": <string>,\n  "user_id": <string>,\n  "model_path":<string>,\n  "features": <list>,\n  "targets": <list>,\n  "algo_type": <string>,\n  "types_map": <json>,\n  "project_id": <string>,\n  "train_accu": <float>,\n  "test_accu": <float>,\n  "dataset": <string>,\n  "permanent_save": <bool>,\n  "created_ts": <datatime>,\n  "updated_ts": <datatime>,\n  "hyper_params": <json>\n}\n')),(0,r.kt)("h3",{id:"sample"},"Sample"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "msg": "Model trained successfully",\n  "error_code": null,\n  "result": {\n    "score": {\n      "train": 0.942446542689397,\n      "test": 0.9649618042060305\n    },\n    "cached_in": {\n      "id": "1686023662.253265",\n      "user_id": "7f7c0c39-0930-43f2-81a3-29e3cffecaa4",\n      "model_path": "/home/Raccoon-AI-Engine/app/storage/cached/ml/Project1-96507/7f7c0c39-0930-43f2-81a3-29e3cffecaa4/1686023662.253265.jlb",\n      "features": ["R&D Spend", "Administration", "Marketing Spend", "State"],\n      "targets": ["Profit"],\n      "algo_type": "Multiple Linear Regressor",\n      "types_map": {\n        "R&D Spend": "float64",\n        "Administration": "float64",\n        "Marketing Spend": "float64",\n        "State": "object",\n        "Profit": "float64"\n      },\n      "project_id": "Project1-96507",\n      "train_accu": 0.942446542689397,\n      "test_accu": 0.9649618042060305,\n      "dataset": null,\n      "permanent_save": false,\n      "created_ts": "2023-06-06T03:54:22.255924",\n      "updated_ts": "2023-06-06T03:54:22.255929"\n    }\n  },\n  "gen_at": "2023-06-06T03:54:22.609745"\n}\n')))}m.isMDXComponent=!0}}]);