"use strict";(self.webpackChunkrae_docs=self.webpackChunkrae_docs||[]).push([[1911],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=u(n),c=a,k=d["".concat(p,".").concat(c)]||d[c]||m[c]||l;return n?r.createElement(k,i(i({ref:t},s),{},{components:n})):r.createElement(k,i({ref:t},s))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4919:(e,t,n)=>{n.r(t),n.d(t,{Tooltip:()=>s,assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:1},i="Runner - 1",o={unversionedId:"api-engine/Runner/ML/runner-1",id:"api-engine/Runner/ML/runner-1",title:"Runner - 1",description:"The runner is responsible for executing a trained AI model to make predictions or perform tasks. It takes input data, applies the model's knowledge, and generates the desired output.",source:"@site/docs/api-engine/Runner/ML/runner-1.mdx",sourceDirName:"api-engine/Runner/ML",slug:"/api-engine/Runner/ML/runner-1",permalink:"/docs/api-engine/Runner/ML/runner-1",draft:!1,editUrl:"https://github.com/SLTDigitalLab/RAE-docs/tree/main/docs/api-engine/Runner/ML/runner-1.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Runner",permalink:"/docs/category/runner"},next:{title:"Web",permalink:"/docs/category/web"}},p={},u=[{value:"Authorization",id:"authorization",level:2},{value:"Request Body",id:"request-body",level:2},{value:"Types",id:"types",level:3},{value:"Sample",id:"sample",level:3},{value:"Reponse Body",id:"reponse-body",level:2},{value:"Types",id:"types-1",level:3},{value:"Sample",id:"sample-1",level:3}],s=e=>{let{children:t,color:n}=e;return(0,a.kt)("span",{style:{backgroundColor:n,borderRadius:"20px",color:"#fff",padding:"7px",cursor:"pointer",fontWeight:"750",fontSize:"15px",position:"relative",bottom:"4px"},onClick:()=>{alert(`You clicked the color ${n} with label ${t}`)}},t)},d={toc:u,Tooltip:s};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"runner---1"},"Runner - 1"),(0,a.kt)("p",null,"The runner is responsible for executing a trained AI model to make predictions or perform tasks. It takes input data, applies the model's knowledge, and generates the desired output."),(0,a.kt)(s,{color:"#3abe25",mdxType:"Tooltip"},"Method: POST")," ",(0,a.kt)(s,{color:"#Be2525",mdxType:"Tooltip"},"Authorization: JWT"),(0,a.kt)("div",{style:{marginBottom:"20px"}}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"https://engine.raccoon-ai.io/api/v1/runner/skl/<project_id>\n")),(0,a.kt)("h2",{id:"authorization"},"Authorization"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Key"),(0,a.kt)("th",{parentName:"tr",align:null},"Value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"JWT"),(0,a.kt)("td",{parentName:"tr",align:null},"Authorization"),(0,a.kt)("td",{parentName:"tr",align:null},"Bearer ##########")))),(0,a.kt)("h2",{id:"request-body"},"Request Body"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Section"),(0,a.kt)("th",{parentName:"tr",align:null},"Key"),(0,a.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"train"),(0,a.kt)("td",{parentName:"tr",align:null},"data"),(0,a.kt)("td",{parentName:"tr",align:null},"json"),(0,a.kt)("td",{parentName:"tr",align:null},"true"),(0,a.kt)("td",{parentName:"tr",align:null},"Data that use to train the model")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"features"),(0,a.kt)("td",{parentName:"tr",align:null},"list"),(0,a.kt)("td",{parentName:"tr",align:null},"true"),(0,a.kt)("td",{parentName:"tr",align:null},"Input features (X)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"targets"),(0,a.kt)("td",{parentName:"tr",align:null},"list"),(0,a.kt)("td",{parentName:"tr",align:null},"true"),(0,a.kt)("td",{parentName:"tr",align:null},"Output targets (y)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"config"),(0,a.kt)("td",{parentName:"tr",align:null},"json"),(0,a.kt)("td",{parentName:"tr",align:null},"false"),(0,a.kt)("td",{parentName:"tr",align:null},"Train configurations")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"project"),(0,a.kt)("td",{parentName:"tr",align:null},"project_id"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"true"),(0,a.kt)("td",{parentName:"tr",align:null},"ID of the project")))),(0,a.kt)("h3",{id:"types"},"Types"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n    "data":<json>,\n    "config": <json>\n}\n')),(0,a.kt)("h3",{id:"sample"},"Sample"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "data": {\n        "R&D Spend": {\n            "0": 165349.2,\n            "1": 162597.7,\n            "2": 153441.51,\n            "3": 144372.41,\n            "4": 142107.34\n        },\n        "Administration": {\n            "0": 136897.8,\n            "1": 151377.59,\n            "2": 101145.55,\n            "3": 118671.85,\n            "4": 91391.77\n        },\n        "Marketing Spend": {\n            "0": 471784.1,\n            "1": 443898.53,\n            "2": 407934.54,\n            "3": 383199.62,\n            "4": 366168.42\n        },\n        "State": {\n            "0": "New York",\n            "1": "California",\n            "2": "Florida",\n            "3": "New York",\n            "4": "Florida"\n        }\n    },\n    "config": {\n        "include_inputs": true\n    }\n}\n\n')),(0,a.kt)("h2",{id:"reponse-body"},"Reponse Body"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Key"),(0,a.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"success"),(0,a.kt)("td",{parentName:"tr",align:null},"boolean"),(0,a.kt)("td",{parentName:"tr",align:null},"Indicate the success of the request")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"msg"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Message indicators")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"error_code"),(0,a.kt)("td",{parentName:"tr",align:null},"int"),(0,a.kt)("td",{parentName:"tr",align:null},"Error code information, only set if success is false")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"result"),(0,a.kt)("td",{parentName:"tr",align:null},"json"),(0,a.kt)("td",{parentName:"tr",align:null},"Result, only set if success is true")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"gen_at"),(0,a.kt)("td",{parentName:"tr",align:null},"datetime"),(0,a.kt)("td",{parentName:"tr",align:null},"Generated datetime")))),(0,a.kt)("h3",{id:"types-1"},"Types"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "success": <bool>,\n    "msg": <string>,\n    "error": <null> or <string>,\n    "result": <json>,\n    "score": <json>,\n    "generated_ts": <timestamp>\n}\n')),(0,a.kt)("h3",{id:"sample-1"},"Sample"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "msg": "Runner predicted successfully",\n  "error": null,\n  "result": {\n    "R&D Spend": {\n      "0": 165349.2,\n      "1": 162597.7,\n      "2": 153441.51,\n      "3": 144372.41,\n      "4": 142107.34\n    },\n    "Administration": {\n      "0": 136897.8,\n      "1": 151377.59,\n      "2": 101145.55,\n      "3": 118671.85,\n      "4": 91391.77\n    },\n    "Marketing Spend": {\n      "0": 471784.1,\n      "1": 443898.53,\n      "2": 407934.54,\n      "3": 383199.62,\n      "4": 366168.42\n    },\n    "State": {\n      "0": "New York",\n      "1": "California",\n      "2": "Florida",\n      "3": "New York",\n      "4": "Florida"\n    },\n    "Profit": {\n      "0": 190209.72,\n      "1": 186863.18,\n      "2": 179790.26,\n      "3": 171576.92,\n      "4": 169898.04\n    }\n  },\n  "score": {\n    "train": 0.942446542689397,\n    "test": 0.9649618042060305\n  },\n  "generated_ts": 1686130100.870728\n}\n')))}m.isMDXComponent=!0}}]);